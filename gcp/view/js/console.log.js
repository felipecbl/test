// make it safe to use console.log always
if(typeof(console) === 'undefined') {var console = {}; console.assert = console.debug = console.dir = console.dirxml = console.error = console.group = console.groupEnd = console.info = console.log = console.profile = console.time = console.timeEnd = console.trace = console.warn = function() {}; }
/** * Patch the console methods in order to provide timestamp information * * Usage: *  > console.log('ok') *  2012-09-06T11:52:56.769Z ok true * * Note: *  The patch will only be applied with the first call. * * Tested with V8 (Google Chrome & NodeJS) */
// (function(o){if(o.__ts__){return;} var slice = Array.prototype.slice; ['log', 'debug', 'info', 'warn', 'error'].forEach(function(f){var _= o[f]; o[f] = function(){var args = slice.call(arguments), thisTime = new Date(), interval = '', total = '   -first log-   ', interLog = 0, background = {none: '#FFFFFF', green: '#EAFFD8', yellow: '#FFFADA', red: '#FEE4E3'}, myColor = background.none; /*is there any log timed?*/ if(window.lastLog){interLog = (thisTime - window.lastLog) / 1000; /*interval between log (3 decimals)*/ interval = ' (' + (interLog).toFixed(3) + '/'; } if(!window.firstLog){window.firstLog = thisTime; }else{total = ((thisTime - window.firstLog) / 1000).toFixed(3) + 'sec)'; } window.lastLog = thisTime; myColor = (interLog > 1) ? background.red : ((interLog > 0.05) ? background.yellow : background.green); args.unshift('background: ' + myColor + ';'); args.unshift('%c[' + thisTime.toISOString() + interval + total + ']'); return _.apply(o, args); }; }); o.__ts__ = true; })(console);